{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/Home.js","components/AddRobot.js","components/UpdateRobot.js","components/DeleteRobot.js","containers/App.js","actions.js","constants.js","registerServiceWorker.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","filteredRobots","undefined","map","user","i","key","SearchBox","search","onSearchChange","type","onChange","placeholder","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","Home","AddRobot","nameChange","username","userNameChange","emailChange","addToList","value","href","onClick","Uppdate_Robot","upName","upNameChange","upUserName","upUserNameChange","upEmail","upEmailChange","idChange","uppdate_robo","DeleteBox","delid","Changedelid","delRobo","connect","robots","manage_data","deid","searchField","dispatch","event","payload","target","obj","filter","robot","toLowerCase","includes","data-icon","viewBox","fill","d","to","path","component","render","DeleteRobot","ErrorBoundry","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","data","isPending","removeRobot","list","parseInt","findRobot","check","find","r","new_arr","alert","setUpdates","push","sort","a","b","clear_field","clear_delid","clear_field_updates","addNewRobot","new_robot","length","logger","createLogger","rootReducers","combineReducers","action","new_list","Object","assign","updated_list","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.add57d74.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h1>ID: {id}</h1>\n        <h2>Name: {name}</h2>\n        <p>EMAIL: {email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({filteredRobots}) => {\n  if(filteredRobots !== undefined){\n  return (\n    <div>\n      {\n        filteredRobots.map((user, i) => {\n          return (\n            \n            <Card\n              key={i}\n              id={filteredRobots[i].id}\n              name={filteredRobots[i].name}\n              email={filteredRobots[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}else {\n  return <h1>Error</h1>\n}\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({search,onSearchChange}) => {\n\n\n  return (\n    <div className='pa2'>\n     <h1>Search a robot by name</h1>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        onChange={onSearchChange}\n        placeholder='search robots'\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary","import React from 'react';\n\nconst Home = () => {\n  return (\n    <div className='pa2 '>\n     <h1>About page</h1> \n     <p className=\"f4 tracked light-yellow\">Click on tab add robot to begin writing your\n      friends name and you get an robot picture with email and an unique id and that\n      you can save to remeber your friends!</p>\n    </div>\n  );\n}\n\nexport default Home;","import\tReact from 'react';\n\nconst AddRobot = ({name,nameChange,username,userNameChange,email,emailChange,addToList}) => {\n\n  \treturn (\n    <div>\n         <h1>Add Robot By Name</h1>\n         \n         \n      <input\n        className='pa2 ba b--green bg-lightest-blue'\n        placeholder='Add Name'\n        value={name}\n        onChange={nameChange}\n      />\n\n     <input\n        className='pa2 ba b--green bg-lightest-blue'\n        placeholder='Add Username'\n        value={username}\n        onChange={userNameChange}\n      />\n\n     <input\n        className='pa2 ba b--green bg-lightest-blue'\n        placeholder='Add Email'\n        value ={email}\n        onChange={emailChange}\n      />\n\n      <button className=\"f50 link dim ph3 pv2 mb2 dib white bg-dark-green ma2\" \n         href=\"addRobo\"\n         onClick={addToList}\n         >\n         Add Robot\n        </button>\n\n    </div>\n );\n}\n\nexport default AddRobot;","import\tReact from 'react';\n\nconst Uppdate_Robot = ({ upName,upNameChange,upUserName,upUserNameChange,upEmail,upEmailChange,id,idChange,uppdate_robo}) => {\n\n\n  \treturn (\n    <div>\n         <h1>Update Robot</h1>\n      <input\n        className='pa2 ba b--green bg-lightest-blue'\n        placeholder='Add ID Robot To Change'\n        value = {id}\n        onChange={idChange}        \n      />\n         \n      <input\n        className='pa2 ba b--green bg-lightest-blue'\n        placeholder='Change Name'\n        value={upName}\n        onChange={upNameChange}\n      />\n\n     <input\n       className='pa2 ba b--green bg-lightest-blue'\n       placeholder='Change Username'\n       value={upUserName}\n       onChange={upUserNameChange}\n    />\n\n    <input\n       className='pa2 ba b--green bg-lightest-blue'\n       placeholder='Change Email'\n       value={upEmail}\n       onChange={upEmailChange}\n    />\n\n      <button className=\"f50 link dim ph3 pv2 mb2 dib white bg-dark-green\" \n         href=\"#0\"\n         onClick={uppdate_robo}>\n         Update Robot\n      </button>\n\n\n    </div>\n );\n}\nexport default Uppdate_Robot;","import React from 'react';\n\n\n\nconst DeleteBox = ({delid,Changedelid,delRobo}) => {\n  return (\n    <div className='pa2'>\n    <h1>Delete Robot By ID </h1>\n      <input\n      name=\"id\"\n      value={delid}\n      className='pa2 ba b--green bg-lightest-blue'\n      placeholder='Write ID of Robot'\n      onChange={Changedelid}\n      />\n      <button className=\"f50 link dim ph3 pv2 mb2 dib white bg-dark-green\" \n         onClick={delRobo}>\n         Delete Robot\n      </button>    </div>\n  );\n }\nexport default DeleteBox;","import React, { Component } from 'react';\nimport {Link,Route,Switch} from 'react-router-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport CardList from '../components/CardList';\nimport {setName, addRobot, setUserName, setEmail,setId,updateRobot,upName,upUserName,upEmail,delid,deleteRobot,setSearchField} from '../actions';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Home from '../components/Home';\nimport {connect} from 'react-redux';\nimport AddRobot from '../components/AddRobot';\nimport UppdateRobot from '../components/UpdateRobot';\nimport DeleteRobot from '../components/DeleteRobot';\nimport './App.css';\n\n\n\nfunction App({robots,name,nameChange,username,userNameChange,email,emailChange,addToList,id,idChange,upName,upNameChange,upUserName,upUserNameChange,uppdate_robo,upEmail,upEmailChange,delid,Changedelid,delRobo,search,onSearchChange})  {\n\n    const stylecur = {fill:'currentcolor'};\n    var filteredRobots = robots;\n     if(search !==''){\n      filteredRobots = robots.filter(robot=> {\n      return robot.name.toLowerCase().includes(search.toLowerCase());\n      })\n      }                  \n    return (\n      <Router>\n      <div className='tc'>\n      \n        <header className=\"bg-white black-80 tc pv4 avenir\">\n  <a href=\"/\" className=\"bg-black-80 ba b--black dib pa3 w2 h2 br-100\">\n    <svg className=\"white\" data-icon=\"skull\" viewBox=\"0 0 32 32\" style={stylecur}>\n    <title>skull icon</title><path d=\"M16 0 C6 0 2 4 2 14 L2 22 L6 24 L6 30 L26 30 L26 24 L30 22 L30 14 C30 4 26 0 16 0 M9 12 A4.5 4.5 0 0 1 9 21 A4.5 4.5 0 0 1 9 12 M23 12 A4.5 4.5 0 0 1 23 21 A4.5 4.5 0 0 1 23 12\"></path></svg>\n  </a>\n  <h1 className=\"mt2 mb0 baskerville i fw1 f1\">RoboFriends</h1>\n  <h2 className=\"mt2 mb0 f6 fw4 ttu tracked\">Create an ensembe of Robot with your friends!</h2>\n  <nav className=\"bt bb tc mw7 center mt4 flex\" >\n    <Link to={'/about'} className=\"f6 f5-l link bg-animate black-80 hover-bg-light-green dib pa3 ph4-l\">About page</Link>\n    <Link to={'/addRobo'} className=\"nav-link f6 f5-l link bg-animate black-80 hover-bg-light-green dib pa3 ph4-l\">Add robot</Link>\n    <Link to={'/updateRobo'} className=\"nav-link f6 f5-l link bg-animate black-80 hover-bg-light-green dib pa3 ph4-l\">Update robot</Link>\n    <Link to={'/searchRobo'} className=\"nav-link f6 f5-l link bg-animate black-80 hover-bg-light-green dib pa3 ph4-l\">Search robot</Link>\n    <Link to={'/delRobo'} className=\"nav-link f6 f5-l link bg-animate black-80 hover-bg-light-green dib pa3 ph4-l\">Delete robot</Link>\n  </nav>\n</header>\n      <Switch>\n\n      <Route \n      path='/about'\n      component={Home}/>\n\n      <Route \n      path='/addRobo'\n      render={props => <AddRobot {...props} name={name} nameChange={nameChange} username={username} userNameChange={userNameChange} email={email} emailChange={emailChange} addToList={addToList}/>}\n      />\n\n      <Route \n      path='/updateRobo'\n      render={props => <UppdateRobot {...props} upName={upName} upNameChange={upNameChange} upUserName={upUserName} upUserNameChange={upUserNameChange} upEmail={upEmail} upEmailChange={upEmailChange} id={id} idChange={idChange} uppdate_robo={uppdate_robo}/>}\n      />\n\n      <Route \n      path='/delRobo'\n      render={props => <DeleteRobot {...props} delid={delid} Changedelid={Changedelid} delRobo={delRobo}/>}\n      />\n\n       <Route \n      path='/searchRobo'\n      render={props => <SearchBox {...props} search={search} onSearchChange={onSearchChange}/>}\n      />\n      </Switch>  \n        <Scroll>{\n            <ErrorBoundry>\n              <CardList filteredRobots={filteredRobots}/>\n            </ErrorBoundry>\n          }\n        </Scroll>\n      </div>\n      </Router>\n    );\n  }\n\nconst mapStateToProps = (state) =>{\n  return {\n    robots: state.manage_data.robots,\n    name: state.manage_data.name,\n    username: state.manage_data.username,\n    email: state.manage_data.email,\n    id: state.manage_data.id,\n    upName: state.manage_data.upName,\n    upUserName: state.manage_data.upUserName,\n    upEmail: state.manage_data.upEmail,\n    delid: state.manage_data.deid,\n    search: state.manage_data.searchField\n  }\n}\n\nconst mapDispachToProps = (dispatch) =>{\n  return {\n    nameChange:(event) => dispatch(setName(event.target.value)),\n    userNameChange: (event) => dispatch(setUserName(event.target.value)),\n    emailChange: (event) => dispatch(setEmail(event.target.value)),\n    idChange: (event) => dispatch(setId(event.target.value)),\n    addToList: () => dispatch(addRobot()),\n    upNameChange: (event) => dispatch(upName(event.target.value)),\n    upUserNameChange: (event) => dispatch(upUserName(event.target.value)),\n    upEmailChange: (event) => dispatch(upEmail(event.target.value)),\n    Changedelid: (event) => dispatch(delid(event.target.value)),\n    uppdate_robo: () => dispatch(updateRobot()),\n    delRobo: () => dispatch(deleteRobot()),\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispachToProps)(App);\n","import { apiCall } from './api/api'\nimport {\n  CHANGE_SEARCHFIELD,\n  CHANGE_NAME,\n  CHANGE_USERNAME,\n  CHANGE_EMAIL,\n  CHANGE_ID,\n  ADD_ROBOT,\n  UPDATE_ROBOT,\n  DELETE_ROBOT,\n  UPNAME,\n  UPUSERNAME,\n  UPEMAIL,\n  DELID,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants'\n\n\nexport const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\nexport const setName = (text) =>({type:CHANGE_NAME,payload:text})\nexport const setUserName = (text) =>({type:CHANGE_USERNAME,payload:text})\nexport const setEmail = (text) =>({type:CHANGE_EMAIL,payload:text})\nexport const setId = (text) => ({type:CHANGE_ID,payload:text})\nexport const addRobot = (obj) =>({type:ADD_ROBOT,payload:obj})\nexport const updateRobot = (obj) =>({type:UPDATE_ROBOT,payload:obj})\nexport const upName = (text) => ({type:UPNAME,payload:text})\nexport const upUserName = (text) => ({type:UPUSERNAME,payload:text})\nexport const upEmail = (text) => ({type:UPEMAIL,payload:text})\nexport const delid = (text) => ({type:DELID,payload:text})\nexport const deleteRobot = (obj) =>({type:DELETE_ROBOT,payload:obj})\n\n\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING })\n  apiCall('https://jsonplaceholder.typicode.com/users')\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\nexport const CHANGE_NAME = 'CHANGE_NAME';\nexport const CHANGE_USERNAME = 'CHANGE_USERNAME';\nexport const CHANGE_EMAIL = 'CHANGE_EMAIL';\nexport const ADD_ROBOT = 'ADD_ROBOT';\nexport const CHANGE_ID = 'CHANGE_ID';\nexport const UPDATE_ROBOT = 'UPDATE_ROBOT';\nexport const DELETE_ROBOT = 'DELETE_ROBOT';\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\nexport const DELID = 'DELID';\nexport const LALA = 'LALA';\nexport const UPNAME = 'UP_NAME';\nexport const UPUSERNAME = 'UP_USERNAME';\nexport const UPEMAIL = 'UP_EMAIL';","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCHFIELD,\n  CHANGE_NAME,\n  CHANGE_USERNAME,\n  CHANGE_EMAIL,\n  ADD_ROBOT,\n  CHANGE_ID,\n  UPDATE_ROBOT,\n  DELETE_ROBOT,\n  UPNAME,\n  UPUSERNAME,\n  UPEMAIL,\n  DELID,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants';\n\nconst data = {\n  robots: [{id:1,\n            name:'Leanne Graham',\n            username:'LeaG',\n            email:'Sincere@april.biz',\n            },\n            {\n            id:2,\n            name:'Erwin Howell',\n            username:'Erh',\n            email:'Shanna@melissa.tv',\n            },\n            {\n            id:3,\n            name:'Clementine Bauch',\n            username:'Clb',\n            email:'Nathan@yesenia.net',\n            },\n            {\n            id:4,\n            name:'Patricia Lebsack',\n            username:'Pal',\n            email:'Julianne.OConner@kory.org',\n            },\n            {\n            id:5,\n            name:'Chelsey Dietrich',\n            username:'Chd',\n            email:'Lucio_Hettinger@annie.ca',\n            },\n            {\n            id:6,\n            name:'Mrs. Dennis Schulist',\n            username:'Dsc',\n            email:'Karley_Dach@jasper.info',\n            },\n            {\n            id:7,\n            name:'Nicolas Runolfsdottir V',\n            username:'Nir',\n            email:'Sherwood@rosamond.me',\n            },\n            {\n            id:8,\n            name:'Glenna Reichert',\n            username:'Gle',\n            email:'Chaim_McDermott@dana.io',\n            },\n            {\n            id:9,\n            name:'Clementina DuBuque',\n            username:'Cdu',\n            email:'Rey.Padberg@karina.biz',\n            }\n  ],\n  id: '',\n  name: '',\n  username: '', \n  email: '',\n  isPending: true,\n  searchField: '',\n  upName:'',\n  upUserName:'',\n  upEmail:'',\n  delid:''\n}\n\nfunction removeRobot(list,id){\n  var new_arr = list.filter(function(obj){ return obj.id !== parseInt(id);});\n  return new_arr;\n}\n\nfunction setUpdates(obj,upName,upUserName,upEmail){\n  if(upName !== ''){\n    obj.name = upName; \n  }\n  if(upUserName !== ''){\n    obj.username = upUserName; \n  }\n  if(upEmail !== ''){\n    obj.email = upEmail; \n  }\n}\n\nfunction findRobot(list,id,upName,upUserName,upEmail){\n  var check = list.find(r => r.id === parseInt(id));\n  var new_arr = list.filter(function(obj){ return obj.id !== parseInt(id);});\n  if(check === undefined){\n    alert(\"This index dosen't exist!\");\n    return list;\n  }\n  else{setUpdates(check,upName,upUserName,upEmail);\n  new_arr.push(check);\n  new_arr.sort((a,b) => parseInt(a.id)-parseInt(b.id));\n  return new_arr;\n}\n}\n\nfunction clear_field(user){\n  user.name = '';\n  user.username = '';\n  user.email = '';\n}\n\nfunction clear_delid(user){\n  user.delid = '';\n}\n\nfunction clear_field_updates(user){\n  user.upName = '';\n  user.upUserName = '';\n  user.upEmail = '';\n  user.id = '';\n}\n\nfunction addNewRobot(obj,list){\nvar new_robot = {};\nnew_robot.id = obj.robots.length + 1;\nnew_robot.name = obj.name;\nnew_robot.username = obj.username;\nnew_robot.email = obj.email;\nlist.push(new_robot);\nreturn list;\n} \n\nexport const manage_data = (state=data,action={})=>{\n  var new_list = [];\n  switch(action.type){\n    case ADD_ROBOT:\n     new_list = addNewRobot(state,state.robots);\n    state.robots = new_list;\n    clear_field(state);\n      return Object.assign({},state,{robots:new_list});\n    case UPDATE_ROBOT:\n    var updated_list = findRobot(state.robots,state.id,state.upName,state.upUserName,state.upEmail);\n    clear_field_updates(state);\n      return Object.assign({},state,{robots:updated_list});\n    case DELETE_ROBOT:\n      new_list = removeRobot(state.robots, state.delid);\n     clear_delid(state);\n      return Object.assign({},state,{robots:new_list});\n    case DELID:\n      return Object.assign({}, state,{delid: action.payload})\n    case CHANGE_ID: \n      return Object.assign({}, state,{id: action.payload})\n    case CHANGE_NAME: \n      return Object.assign({}, state,{name: action.payload})\n    case CHANGE_USERNAME: \n      return Object.assign({}, state,{username: action.payload})\n    case CHANGE_EMAIL: \n      return Object.assign({}, state,{email: action.payload})\n    case UPNAME: \n      return Object.assign({}, state,{upName: action.payload})\n    case UPUSERNAME: \n      return Object.assign({}, state,{upUserName: action.payload})\n    case UPEMAIL: \n      return Object.assign({}, state,{upEmail: action.payload})\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {robots: action.payload, isPending: false})\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {searchField: action.payload})  \n      default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport 'tachyons';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {manage_data} from './reducers'\n\nimport './index.css';\n\nconst logger = createLogger()\n\nconst rootReducers = combineReducers({manage_data})\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}